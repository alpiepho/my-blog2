{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/fixing-emojis/","result":{"data":{"site":{"siteMetadata":{"title":"My Blog (Round 2)","social":[{"name":"linkedin","url":"https://www.linkedin.com/in/al-piepho-fw-sw-engineer/"},{"name":"github","url":"https://github.com/alpiepho"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"41526d80-7524-5b29-a7b8-a776e450c0a9","excerpt":"I'm starting this post  BEFORE  I have the emojis fixed...hope fully there is no \"Murphys Law\" jinx. This should be an emoji - :smile…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Fixing Emojis\",\n  \"date\": \"2020-04-20\",\n  \"description\": \"How I fixed emojis in this Gatsby site\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I\\u2019m starting this post \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BEFORE\"), \" I have the emojis fixed\\u2026hope fully there is no \\u201CMurphys Law\\u201D jinx.\"), mdx(\"p\", null, \"This should be an emoji - \\uD83D\\uDE04.\"), mdx(\"p\", null, \"Piece of cake \\uD83C\\uDF70 \\u2026 \", mdx(\"del\", {\n    parentName: \"p\"\n  }, \"not\"), \"!.  But, I did learn a ton, like that strikethru.  I spend 3 days to\\nfigure this out, so here is what I learned.\"), mdx(\"h3\", {\n    \"id\": \"the-solution\"\n  }, \"The solution\"), mdx(\"p\", null, \"Found final clue to the solution \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ChristopherBiscardi/gatsby-mdx/issues/118\"\n  }), \"here\"), \" and\\nthis \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/rawkode/modern-life/blob/81dcc43e27f240128906adc9a8cbe51fdcdb9850/gatsby-theme-rawkode/gatsby-config.js#L73\"\n  }), \"github repo\"), \".\\nI discovered this early on, but it would not have helped without another change.\"), mdx(\"p\", null, \"The solution is to add require(\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"remark-emoji\"), \") to the remarkPlugins option for the gatsby-plugin-mdx.\\nThe \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-mdx\"\n  }), \"documentation\"), \" does\\ndiscuss using the standard \\u201CRemark Plugins\\u201D, but that doesn\\u2019t sink in when you have multiple emoji npm\\npackages to chose from\\u2026I found these:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/gatsby-remark-emojis\"\n  }), \"gatsby-pluging-emojis\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/gatsby-remark-emoji\"\n  }), \"gatsby-plugin-emoji\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/remark-emoji\"\n  }), \"remark-emoji\"))), mdx(\"p\", null, \"Which would you pick for a Gatsby project?\"), mdx(\"p\", null, \"Like I said before, the link that gave me the final piece was not enough.  I think I did try adding that\\ndirectly to my project (gatsby_config.js for this blog site), but it didn\\u2019t work.  \"), mdx(\"p\", null, \"I was missing the the fact that my blog was created using a Gastby starter project, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/gatsby-theme-blog\"\n  }), \"gatsby-theme-blog\"), \",\\nwas also setting gatsby-plugin-mdx settings (actually in the gatsby-theme-blog-core).  \"), mdx(\"p\", null, \"Are you confused yet?  Me too.  It took a lot of digging thru code in the node_modules installed\\npackages and learning to use the node debugger (more in the next section).  I finally found the flag\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mdxOtherwiseConfigured\"), \" for gatsby-theme-blog.  Yes is is documented, but didn\\u2019t jump out at me.\"), mdx(\"p\", null, \"Using that flag, and copying the gatsby_config.js settings for gatsby-plugin-mdx from\\ngatsby-theme-blog-core, I was finally able to add the \\u201Crequire(\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"remark-emoji\"), \")\\u201D statement:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"      resolve: `gatsby-plugin-mdx`,\\n      options: {\\n        extensions: [`.mdx`, `.md`],\\n        gatsbyRemarkPlugins: [\\n          {\\n            resolve: `gatsby-remark-images`,\\n            options: {\\n              // should this be configurable by the end-user?\\n              maxWidth: 1380,\\n              linkImagesToOriginal: false,\\n            },\\n          },\\n          { resolve: `gatsby-remark-copy-linked-files` },\\n          { resolve: `gatsby-remark-smartypants` },\\n        ],\\n        remarkPlugins: [require(`remark-slug`), require(`remark-emoji`)],\\n                                                ^\\n                                                ^^\\n                                                ^^^\\n      },\\n\")), mdx(\"p\", null, \"\\uD83D\\uDE80  Sorry for all the \\u201Cgatsby-plugin-blah-blah\\u201D terms, but I\\u2019m trying to keep this straight myself.\"), mdx(\"h3\", {\n    \"id\": \"learned-to-debug-gatsby\"\n  }, \"Learned to debug Gatsby\"), mdx(\"p\", null, \"After a day of searching on Google for hints, and then resorting to dig into the installed packages in node_modules,\\nI was starting to get desperate.  I had heard it was possible to debug the Gatsby build process using\\nstandard Browser tools.  I already had some experience debugging Web App Javascript and HTML using both\\nChrome and Firefox developer tools.  \\u201CHow hard could it be?\\u201C.  \"), mdx(\"p\", null, \"With a little searching, I found how to invoke the debugger:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"gatsby clean\\nnode --inspect-brk --no-lazy node_modules/gatsby/dist/bin/gatsby build\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"This cleans up all the generated post pages from the  .mdx files, then launches\\nthe node debugger.\"), mdx(\"p\", null, \"I have to admit, I still don\\u2019t fully understand how the Gatsby build system works, but I know\\nmore than I did before I started.  At least, it lead me to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mdxOtherwiseConfigured\"), \".  It\\nalso lead me to the commented out code for mutateSource, which intern was the right Google\\nsearch term I need to find the last piece.\"), mdx(\"p\", null, \"I the end, I finally found how to fix my emojis \\uD83D\\uDC4D \\u2026 and learned something. \\uD83D\\uDCDA\"), mdx(\"h3\", {\n    \"id\": \"here-are-some-followup-tasks\"\n  }, \"Here are some followup tasks:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"investigate in gasty repo for gatsby-plugin-mdx when the call to mutateSource was commented out\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2 years ago by Christopher Biscardi (just love VS Code Gitlens plugin)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Decide if I should comment or tray to add warning and offer PR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add issue to gastby-theme-blog and possible PR to update README.md about how to add emoji\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Learn how to control my overuse of emojis \\uD83D\\uDCA5 \\uD83D\\uDE04\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/fixing-emojis/","title":"Fixing Emojis","tags":[],"keywords":[],"date":"April 20, 2020"},"previous":{"__typename":"MdxBlogPost","id":"1d650be2-ae81-5f71-8a6f-f874c4890036","excerpt":"I did go down the path to use the Github api to gather a bunch of json data that\ndescribed all the repos in my account. I wound up creating…","slug":"/github-summary-restrospective/","title":"Github Repos - Retrospective","date":"April 19, 2020"},"next":{"__typename":"MdxBlogPost","id":"0bf62333-84cc-5b0c-b5f7-13a8af5a59e3","excerpt":"The blog post  LinkedIn Completed Courses  was generated by another\napplications,  pup-learning , that uses\nthe Javascript library…","slug":"/learning-summary-restrospective/","title":"LinkedIn Completed Courses - Retrospective","date":"April 27, 2020"}},"pageContext":{"id":"41526d80-7524-5b29-a7b8-a776e450c0a9","previousId":"1d650be2-ae81-5f71-8a6f-f874c4890036","nextId":"0bf62333-84cc-5b0c-b5f7-13a8af5a59e3"}}}